(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{330:function(t,_,v){t.exports=v.p+"assets/img/http3.d0b32f45.jpg"},331:function(t,_,v){t.exports=v.p+"assets/img/uri02.122cb877.jpg"},407:function(t,_,v){"use strict";v.r(_);var l=v(33),i=Object(l.a)({},(function(){var t=this,_=t.$createElement,l=t._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h3",{attrs:{id:"_1-基础"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_1-基础"}},[t._v("#")]),t._v(" 1. 基础")]),t._v(" "),l("h4",{attrs:{id:"_1-1-http-、https"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-http-、https"}},[t._v("#")]),t._v(" 1.1 http 、https")]),t._v(" "),l("ul",[l("li",[l("p",[t._v("Http协议是什么？有哪些特点？")]),t._v(" "),l("ul",[l("li",[t._v("header + body 结。 "),l("strong",[t._v("起始行 + 头部 + 空行 + 实体")])])]),t._v(" "),l("div",{staticClass:"language-http extra-class"},[l("pre",{pre:!0,attrs:{class:"language-http"}},[l("code",[t._v("# 起始行 方法 + 路径 + 版本号\n"),l("span",{pre:!0,attrs:{class:"token request-line"}},[l("span",{pre:!0,attrs:{class:"token property"}},[t._v("GET")]),t._v(" /home HTTP/1.1")]),t._v("\n")])])])]),t._v(" "),l("li",[l("p",[t._v("GET 与 POST 有什么区别？\n+")])])]),t._v(" "),l("ol",[l("li",[t._v("在HTML的form 标签里，method支持哪些类型？")]),t._v(" "),l("li",[t._v("状态码 200、301、302、304、403、404、500、503分别代表什么？")]),t._v(" "),l("li",[t._v("Web安全中有哪些常见的攻击方式？")])]),t._v(" "),l("ul",[l("li",[l("p",[t._v("http 进行非对称加密，得到 https，这个过程是怎么样的？什么是 CA 证书？整个网站进行验证的流程是什么？")]),t._v(" "),l("p",[t._v("由于 http 明文传输，传输报文对外透明，非常不安全。https 并不是一个新协议")]),t._v(" "),l("p",[t._v("https = http + ssl/tsl")]),t._v(" "),l("p",[t._v("浏览器发送 client_random 等")]),t._v(" "),l("p",[t._v("服务端确认 server_random tls 版本等")]),t._v(" "),l("p",[t._v("客户端验证证书，验证通过 生成 secret")]),t._v(" "),l("p",[t._v("服务端生成 secret")]),t._v(" "),l("p",[t._v("Tsl 是一个双向验证的过程，握手正式结束后，HTTP 才开始正式的加密报文传输。")]),t._v(" "),l("p",[t._v("采用 hash 算法，公钥加密，私钥解密")])]),t._v(" "),l("li",[l("p",[t._v("http 各个版本的区别是什么？解决了哪些问题？比如头部缩减的优化，那你了解这个优化的具体策略吗？缩减了什么？又增加了什么？要深挖细节。")]),t._v(" "),l("ul",[l("li",[t._v("http 1.1 的缺陷高延时，带来的页面加载速度降低。\n"),l("ul",[l("li",[t._v("将同一页面的资源分散到不同域名下（Chrome对于同一个域名，默认允许同时建立 6 个 TCP持久连接）")]),t._v(" "),l("li",[t._v("Spriting合并多张小图为一张大图")])])]),t._v(" "),l("li",[t._v('http 头部巨大 （"User Agent""Cookie""Accept""Server"）等')]),t._v(" "),l("li",[t._v("http 1.1 解决了明文传输--带来的不安全性")]),t._v(" "),l("li",[t._v("http2\n"),l("ul",[l("li",[t._v("HTTP/2基于SPDY，专注于性能，最大的一个目标是在用户和网站间只用一个连接（connection）")]),t._v(" "),l("li",[t._v("使用HTTP/2能带来20%~60%的效率提升。")])])])])]),t._v(" "),l("li",[l("p",[t._v("HTTP 2 新特性")]),t._v(" "),l("ul",[l("li",[t._v("资源优先级和依赖设置")]),t._v(" "),l("li",[t._v("服务器推送")]),t._v(" "),l("li",[t._v("流量控制")]),t._v(" "),l("li",[t._v("重置消息")]),t._v(" "),l("li",[t._v("头部压缩、二进制传输\n"),l("ul",[l("li",[t._v('以二进制方式传输 和 Header 压缩，。建立索引表让请求头字段得到极大程度的精简和复用。原来的"Header+Body"的消息"打散"为数个小片的二进制"帧，用'),l("strong",[t._v("Headers帧")]),t._v("存放头部字段，"),l("strong",[t._v("Data帧")]),t._v("存放请求体数据")])])]),t._v(" "),l("li",[t._v("多路复用\n"),l("ul",[l("li",[l("strong",[t._v("HTTP/2是基于二进制“帧”的协议，HTTP/1.1是基于“文本分割” （key:value）解析的协议。")]),t._v(" 所有 HTTP2很好的解决了浏览器限制同一个域名下的请求数量的问题，同时也接更容易实现全速传输")]),t._v(" "),l("li",[t._v("一次请求完成（html css js 下载到浏览器）")])])]),t._v(" "),l("li",[t._v("HTTP/2 使用 TCP 协议来传输的，而如果使用 HTTPS 的话，还需要使用 TLS 协议进行安全传输，而使用TLS也需要一个握手过程，"),l("strong",[t._v("这样就需要有两个握手延迟过程")]),t._v("：")])])]),t._v(" "),l("li",[l("p",[t._v("HTTP 1、2、3")]),t._v(" "),l("p",[l("img",{attrs:{src:v(330),alt:"http3"}})]),t._v(" "),l("ul",[l("li",[l("p",[t._v("http3 基于 UDP 的 Quic")])]),t._v(" "),l("li",[l("p",[t._v("HTTP/1.1 有两个主要的缺点：安全不足和性能不高。")])]),t._v(" "),l("li",[l("p",[t._v('HTTP/2 完全兼容HTTP/1，是“更安全的HTTP、更快的HTTPS"，头部压缩、多路复用等技术可以充分利用带宽，降低延迟，从而大幅度提高上网体验；')])]),t._v(" "),l("li",[l("p",[t._v("QUIC 基于 UDP 实现，是 HTTP/3 中的底层支撑协议，该协议基于 UDP，又取了 TCP 中的精华，实现了既快又可靠的协议")])])])])]),t._v(" "),l("ol",[l("li"),t._v(" "),l("li",[t._v("URI和URL的区别？\n"),l("ul",[l("li",[t._v("URI是"),l("code",[t._v("Uniform Resource Identifier")]),t._v("的缩写,统一资源标识符,即由某个协议方案表示的资源的定位标识符")]),t._v(" "),l("li",[t._v("URI 用字符串标识某一互联网资源，而 URL表示资源的地点（互联网上所处的位置）。可见 URL是 URI 的子集"),l("br")]),t._v(" "),l("li",[t._v("URI的例子\n"),l("img",{attrs:{src:"http://cdn.xutong.top/uri.jpg",alt:"uri"}})]),t._v(" "),l("li",[t._v("绝对URI的格式,遵循以下规则。\n"),l("img",{attrs:{src:v(331),alt:"uri"}})])])]),t._v(" "),l("li",[t._v("一次完整的Http请求所经历哪些步骤？")])]),t._v(" "),l("h3",{attrs:{id:"_2-进阶"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_2-进阶"}},[t._v("#")]),t._v(" 2. 进阶")]),t._v(" "),l("ul",[l("li",[t._v("说说Http协议的工作流程")]),t._v(" "),l("li",[t._v("Http请求报文与响应报文的格式？")]),t._v(" "),l("li",[t._v("Http首部包含哪些字段？举例说明")]),t._v(" "),l("li",[t._v("Https的原理是什么？")]),t._v(" "),l("li",[t._v("浅析Http和Https的三次握手有什么区别。")]),t._v(" "),l("li",[t._v("谈谈Session/cookie机制，如何实现会话跟踪？")]),t._v(" "),l("li",[t._v("什么是Web缓存？原理如何？")]),t._v(" "),l("li",[t._v("OSI有哪七层模型？TCP/IP是哪四层模型。")]),t._v(" "),l("li",[t._v("讲一讲TCP协议的三次握手和四次挥手流程。")]),t._v(" "),l("li",[t._v("为什么TCP建立连接协议是三次握手，而关闭连接却是四次握手呢？为什么不能用两次握手进行连接？")]),t._v(" "),l("li",[t._v("websockt是什么？和Http有什么区别？")])]),t._v(" "),l("h3",{attrs:{id:"_3-高级"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_3-高级"}},[t._v("#")]),t._v(" 3. 高级")]),t._v(" "),l("ul",[l("li",[t._v("什么是非持久连接，什么是持久连接？")]),t._v(" "),l("li",[t._v("Keep-Alive: timeout=5, max=100是什么意思？")]),t._v(" "),l("li",[t._v("http1.0，http1.1，http2.0区别（HTTP1.1版本新特性？HTTP2版本新特性？）")]),t._v(" "),l("li",[t._v("对Http代理做个介绍？")]),t._v(" "),l("li",[t._v("常见的鉴权方式有哪些？")]),t._v(" "),l("li",[t._v("http 2 http3\n"),l("ul",[l("li",[t._v("以富媒体（如图片、声音、视频）")])])])])])}),[],!1,null,null,null);_.default=i.exports}}]);