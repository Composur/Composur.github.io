(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{353:function(e,t,v){e.exports=v.p+"assets/img/react-life.ed371015.png"},414:function(e,t,v){"use strict";v.r(t);var o=v(33),_=Object(o.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("p",[o("img",{attrs:{src:v(353),alt:""}})]),e._v(" "),o("h2",{attrs:{id:"首次生命周期函数调用顺序如下"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#首次生命周期函数调用顺序如下"}},[e._v("#")]),e._v(" 首次生命周期函数调用顺序如下")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("constructor")]),e._v(" "),o("ul",[o("li",[e._v("初始化，组件状态")]),e._v(" "),o("li",[e._v("唯一可以直接修改 state 的地方")])])]),e._v(" "),o("li",[o("code",[e._v("getDerivedStateFromProps")]),e._v(" 用来替换 "),o("code",[e._v("componentWillReceiveProps")]),e._v(" "),o("ul",[o("li",[e._v("用外部的属性来初始化内部的状态")]),e._v(" "),o("li",[e._v("当 state 需要从 props 初始化时使用")]),e._v(" "),o("li",[e._v("每次 render 都会调用")]),e._v(" "),o("li",[e._v("使用不当，易产生 bug")])])]),e._v(" "),o("li",[o("code",[e._v("~~componentWillMount/UNSAVE_componentWillMount~~")]),e._v("\n+ "),o("code",[e._v("render")]),e._v("之前调用，在此声明周期中使用 "),o("code",[e._v("setState")]),e._v(" 不会触发额外渲染")]),e._v(" "),o("li",[o("code",[e._v("render")]),e._v(" "),o("ul",[o("li",[e._v("必须定义，UI 渲染")])])]),e._v(" "),o("li",[o("code",[e._v("componentDidMount(第一次render之后执行)")]),e._v(" "),o("ul",[o("li",[e._v("获取外部资源，只执行一次。")])])])]),e._v(" "),o("h3",{attrs:{id:"当组件的-props-或-state-发生变化时会触发更新。组件更新的生命周期调用顺序如下："}},[o("a",{staticClass:"header-anchor",attrs:{href:"#当组件的-props-或-state-发生变化时会触发更新。组件更新的生命周期调用顺序如下："}},[e._v("#")]),e._v(" 当组件的 "),o("code",[e._v("props")]),e._v(" 或 "),o("code",[e._v("state")]),e._v(" 发生变化时会触发更新。组件更新的生命周期调用顺序如下：")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("static getDerivedStateFromProps()")])]),e._v(" "),o("li",[o("code",[e._v("shouldComponentUpdate()")]),e._v(" "),o("ul",[o("li",[e._v("用户可以介入，性能优化的过程。组件是否更新。")]),e._v(" "),o("li",[e._v("一般由 PureComponent 自动实现")])])]),e._v(" "),o("li",[o("code",[e._v("render()")])]),e._v(" "),o("li",[o("code",[e._v("getSnapshotBeforeUpdate()")]),e._v(" 用来替换 "),o("code",[e._v("componentWillUpdate")]),e._v(" "),o("ul",[o("li",[e._v("页面更新前调用，"),o("code",[e._v("state")]),e._v(" 已更新")]),e._v(" "),o("li",[e._v("可用来获取 "),o("code",[e._v("render")]),e._v(" 前最新的 "),o("code",[e._v("DOM")]),e._v(" 数据")])])]),e._v(" "),o("li",[o("code",[e._v("componentDidUpdate()")]),e._v(" "),o("ul",[o("li",[e._v("每次更新都会调用")])])])]),e._v(" "),o("h3",{attrs:{id:"卸载-当组件从-dom中移除时会调用如下方法："}},[o("a",{staticClass:"header-anchor",attrs:{href:"#卸载-当组件从-dom中移除时会调用如下方法："}},[e._v("#")]),e._v(" 卸载 当组件从 "),o("code",[e._v("DOM")]),e._v("中移除时会调用如下方法：")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("componentWillUnmount()")])])]),e._v(" "),o("h3",{attrs:{id:"有哪些⽣命周期被舍弃（3个），哪些⽣命周期是新增（2个）？"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#有哪些⽣命周期被舍弃（3个），哪些⽣命周期是新增（2个）？"}},[e._v("#")]),e._v(" 有哪些⽣命周期被舍弃（3个），哪些⽣命周期是新增（2个）？")]),e._v(" "),o("ul",[o("li",[e._v("舍弃\n"),o("ul",[o("li",[o("code",[e._v("~~componentWillMount~~")])]),e._v(" "),o("li",[o("code",[e._v("~~componentWillReceivePorps~~")])]),e._v(" "),o("li",[o("code",[e._v("~~componentWillUpdate~~")])])])]),e._v(" "),o("li",[e._v("新增\n"),o("ul",[o("li",[o("code",[e._v("getDerivedStateFromProps")]),e._v(" （可以用来替换"),o("code",[e._v("componentWillReceiveProps()")]),e._v("）")]),e._v(" "),o("li",[e._v("根据"),o("code",[e._v("props")]),e._v("更新"),o("code",[e._v("state")]),e._v("上的"),o("code",[e._v("meuns")])])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v(" // 这个方法已经不建议使用\ncomponentWillReceiveProps(next){\n  this.setState({\n    menus:next.role.menus\n  })\n}\n")])])]),o("ul",[o("li",[e._v("替代方法")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("static getDerivedStateFromProps(nextProps, prevState){\n  if (nextProps.role.menus !== prevState.menus) {\n    // 额外写一个newMeuns state来记录上一个props，在组件渲染的时候传入这个更新后的newMeuns\n    return {\n      newMenus:nextProps.role.menus\n    };\n  } \n  // 不更新state\n  return null\n}\n")])])]),o("ul",[o("li",[o("code",[e._v("getSnapshotBeforeUpdate()")]),e._v(" （在最近一次渲染输出（提交到 "),o("code",[e._v("DOM")]),e._v(" 节点）之前，"),o("code",[e._v("render")]),e._v("之后调用）")])])])]),e._v(" "),o("h3",{attrs:{id:"这些⽣命周期被舍弃或新增的原因？以及新增⽣命周期的参数和作⽤？"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#这些⽣命周期被舍弃或新增的原因？以及新增⽣命周期的参数和作⽤？"}},[e._v("#")]),e._v(" 这些⽣命周期被舍弃或新增的原因？以及新增⽣命周期的参数和作⽤？")]),e._v(" "),o("ol",[o("li",[e._v("会导致组件不必要的更新，父组件渲染即使没有改变"),o("code",[e._v("props")]),e._v(" 也会调用"),o("code",[e._v("componentWillReceivePorps")])]),e._v(" "),o("li",[e._v("异步渲染时间长会导致"),o("code",[e._v("componentWillUpdate、componentDidUpdate")]),e._v("之间的时间变长，这个过程中可能发生一些变化，比如用户行为导致 DOM 发生了新的变化，这时在 "),o("code",[e._v("componentWillUpdate")]),e._v("获取的信息可能就不可靠了")]),e._v(" "),o("li",[e._v("作用"),o("code",[e._v("static getDerivedStateFromProps(nextProps, prevState)")]),e._v("接收两个参数（它内部你只能访问到组件上的这两个参数），第一个为接收到的新参数，第二是是当前的"),o("code",[e._v("state")]),e._v("。会返回一个对象用来更新"),o("code",[e._v("state")]),e._v("不需要可以返回"),o("code",[e._v("null")])])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("class Hehe extends React.Component {\n  state={\n    isRight:false,\n    xxx:xxx\n  }\n  static getDerivedStateFromProps(nextProps, prevState){\n    if(nextProps.xxx===prevState.xxx){\n      return {\n        isRight:true\n      }\n    }\n    return null\n  }\n}\n")])])]),o("h3",{attrs:{id:"react⼏个版本（1-6-3、1-6-4、1-7-0）对⽣命周期的相关处理和规划"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#react⼏个版本（1-6-3、1-6-4、1-7-0）对⽣命周期的相关处理和规划"}},[e._v("#")]),e._v(" "),o("code",[e._v("React")]),e._v("⼏个版本（1.6.3、1.6.4、1.7.0）对⽣命周期的相关处理和规划?")]),e._v(" "),o("ol",[o("li",[e._v("1.6.3 新旧可以混用。")]),e._v(" "),o("li",[e._v("1.6.4 使用旧生命周期，开发者模式下会有警号")]),e._v(" "),o("li",[e._v("1.7.0 移除旧的生命周期")])]),e._v(" "),o("h3",{attrs:{id:"为什么要把getderivedstatefromprops设计为静态⽅法？"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#为什么要把getderivedstatefromprops设计为静态⽅法？"}},[e._v("#")]),e._v(" 为什么要把"),o("code",[e._v("getDerivedStateFromProps")]),e._v("设计为静态⽅法？")]),e._v(" "),o("ol",[o("li",[e._v("内部不能拿this，比较纯粹，不能用setState(),会在render方法之前被调用，")])]),e._v(" "),o("h3",{attrs:{id:"getderivedstatefromprops被触发执⾏的条件有哪些？"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#getderivedstatefromprops被触发执⾏的条件有哪些？"}},[e._v("#")]),e._v(" "),o("code",[e._v("getDerivedStateFromProps")]),e._v("被触发执⾏的条件有哪些？")]),e._v(" "),o("ul",[o("li",[e._v("组件挂载的时候")]),e._v(" "),o("li",[e._v("接收到新的"),o("code",[e._v("props")]),e._v("时")]),e._v(" "),o("li",[e._v("组件卸载时")]),e._v(" "),o("li",[e._v("父组件更新")]),e._v(" "),o("li",[e._v("内部组件执行了"),o("code",[e._v("state")]),e._v("\n可以总结为一句话，此静态方法会在"),o("code",[e._v("render")]),e._v("之前被调用，在初始挂载以及后续更新的时候都会被调用。")])]),e._v(" "),o("h3",{attrs:{id:"derived-state的定义是？（如何理解derived-state-）"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#derived-state的定义是？（如何理解derived-state-）"}},[e._v("#")]),e._v(" "),o("code",[e._v("Derived state")]),e._v("的定义是？（如何理解"),o("code",[e._v("derived state")]),e._v("?）")]),e._v(" "),o("p",[e._v("派生一个state，根据传入的props进行state的更新")]),e._v(" "),o("h3",{attrs:{id:"在1-6-3中，setstate-不会引起getderivedfromprops的执⾏，⽽1-6-4-会，原因是？"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#在1-6-3中，setstate-不会引起getderivedfromprops的执⾏，⽽1-6-4-会，原因是？"}},[e._v("#")]),e._v(" 在1.6.3中，"),o("code",[e._v("setState()")]),e._v("不会引起"),o("code",[e._v("getDerivedFromProps")]),e._v("的执⾏，⽽1.6.4.会，原因是？")]),e._v(" "),o("p",[e._v("据说是官方失误")]),e._v(" "),o("h3",{attrs:{id:"_1-6-2及其以前升级到1-6-4的⽅案是？"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-2及其以前升级到1-6-4的⽅案是？"}},[e._v("#")]),e._v(" 1.6.2及其以前升级到1.6.4的⽅案是？")]),e._v(" "),o("blockquote",[o("p",[e._v("虽然废弃了这三个生命周期方法，但是为了向下兼容，将会做渐进式调整。\nV16.3 并未删除这三个生命周期，同时还为它们新增以 UNSAFE_ 前缀为别名的三个函数 UNSAFE_componentWillMount()、UNSAFE_componentWillReceiveProps()、UNSAFE_componentWillUpdate()。\n在 16.4 版本给出警告将会弃用 componentWillMount()、componentWillReceiveProps()、componentWillUpdate() 三个函数")])]),e._v(" "),o("h3",{attrs:{id:"_1-6-x升级到1-7的⽅案是？"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-x升级到1-7的⽅案是？"}},[e._v("#")]),e._v(" 1.6.x升级到1.7的⽅案是？")]),e._v(" "),o("ul",[o("li",[e._v("在 17 版本将会删除 componentWillMount()、componentWillReceiveProps()、componentWillUpdate() 这三个函数，会保留使用 UNSAFE_componentWillMount()、UNSAFE_componentWillReceiveProps()、UNSAFE_componentWillUpdate()")]),e._v(" "),o("li",[e._v("使用 react-lifecycles-compat polyfill")])])])}),[],!1,null,null,null);t.default=_.exports}}]);